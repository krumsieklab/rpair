% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.rpair.R
\name{predict.rpair}
\alias{predict.rpair}
\title{Predict or extract values from rpair object}
\usage{
\method{predict}{rpair}(object, newx, s = NULL, type = c("link", "coefficients", "nonzero"))
}
\arguments{
\item{object}{A fitted rpair object.}

\item{newx}{A matrix of new values. This argument is not required for type=c("coefficients", "nonzero").}

\item{s}{Value(s) of the penalty parameter lambda at which predictions are required. Default is the entire
sequence used to create the model.}

\item{type}{Type of prediction desired. Type "link" gives linear predictors, type "coefficients" returns a matrix
of coefficients, and type "nonzero" returns a list of the indices of the nonzero coefficients.}
}
\value{
The object returned depends on the value of "type".
}
\description{
Predicts fitted values given a matrix of new values. Can also extract and return coefficient and nonzero lists.
}
\examples{
fp<- function(S){
time <- S[,1]
status <- S[,2]
N = length(time)
# for tied times
time[status == 0] = time[status == 0]+1e-4
dtimes <- time
dtimes[status == 0] = Inf
which(outer(time, dtimes, ">"), arr.ind = T)
}
# generate some random data
set.seed(41)
x = matrix(rnorm(40000),ncol = 200 )
S = cbind(sample(nrow(x)), rbinom(nrow(x),1,prob = 0.7))
# generate pairs
cp = fp(S)
efit = rpair_gloss(x, cp, standardize = F, pmax = 50, loss_type = "exp")
newpred = predict(efit, x, type="link")
nonzero = predict(efit, type = "nonzero")

}
\author{
KC
}
